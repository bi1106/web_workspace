웹애플리케이션 프로젝트를 만듭니다.

+ 중요 사항

1. 자바소스파일 .java는 java resources 항목에서 파일을 생성
2. 웹과 관련된 정적파일 html, css, js, 이미지sms 
webapp 폴더에 생성
3. 웹과 관련된 동적파일 jsp는 webapp 폴더에 생성
jsp를 사용하면서부터는 html 대신에 모든 소스파일은 jsp로 합니다.
* 단, 비동기 통신을 사용할 때에는 html로 합니다. 
4. jsp를 처리하기 위해서는 반드시 was 역할을 하는 것이 필요합니다.
우리는 tomcat을 사용. -> was서버(웹컨테이너 기능)가 있어야 합니다.
5. 웹에서 사용할 라이브러리는 build path 설정으로 하지 않고
webapp 아래 보면 WEB-INF - lib 폴더에 라이브러리를 복붙해서 가져옵니다.
6. 웹컨테이너가 처리할 설정파일(배포기술자) web.xml 을 필요로 합니다.
-> 개발자 웹프로젝트에 없으면 톰캣의 web.xml을 기본으로 합니다.
7. 실행시 오류가 발생을 했습니다. 오류를 수정한 후
.java를 수정하고 저장하면 자동으로 빌드하고 톰캣도 프로젝트를 새롭게 로드를 합니다.
.jsp를 수정/저장 한 후에는 브라우저에서 새로고침 하세요.

=> 위 사항은 정상 동작할 때. 비정상적으로 수정된 코드가 반영이 안 되면 톰캣을 재시작



<<JSP와 관련된 문법 요소>>
요청된 jsp 파일은 웹컨테이너(was 서버)가 .java 소스파일로 변경 -> 컴파일 -> .class 를 was 서버가 저장해 놓음. 
-> 웹 컨테이너(was 서버) -> html로 변경
-> 사용자 브라우저에게 전달

1. JSP 기본문법
1) 스크립트릿 : <% %>
			-> 자바 코드 작성
2) 표현식 : <%= %> *자바스크립트표현식기호 ${}를 jsp 에서는 el 이라고 부릅니다.
			-> 태그 요소에 출력내용 (자바변수, 수식, 메소드...) 작성
3) 지시자 : <%@ %> jsp 설정 관련
	page 지시자 <%@ page %> : 언어설정, import 등 jsdp 파일에서는 필수적인 지시자
	include 지시자 : file="파일명" .file 속성으로 지정된 소스코드를 포함시킴